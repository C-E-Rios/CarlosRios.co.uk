
// As is often the case, some devices/browsers need additional code to get CSS to work
// in the most desired way. These mixins are used to quickly drop in hacks for each element
// Find out more here: https://github.com/IanLunn/Hover/wiki/Hacks-Explained

@mixin hardwareAccel() {
	// Improve performance on mobile/tablet devices
	// @include prefixed(transform, translateZ(0));
    transform: translateZ(0);
}

@mixin improveAntiAlias() {
	// Improve aliasing on mobile/tablet devices
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin fontSmooth() {
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	-moz-osx-font-smoothing: grayscale;
}

@mixin forceBlockLevel() {
	// Transforms need to be block-level to work
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
	@include fontSmooth();
}



// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit == true {
    @-webkit-keyframes #{$name} {
      @content;
    }
  }

  @if $moz == true {
    @-moz-keyframes #{$name} {
      @content;
    }
  }

  @if $ms == true {
    @-ms-keyframes #{$name} {
      @content;
    }
  }

  @if $o == true {
    @-o-keyframes #{$name} {
      @content;
    }
  }

  @keyframes #{$name} {
    @content;
  }
}
// DEFAULT OPTIONS

// Prefix for Hover class names
$nameSpace: 'hvr' !default;

// Durations
$fastDuration: .1s !default;
$mediumDuration: .3s !default;
$slowDuration: .5s !default;

// Colors
$primaryColor: #e1e1e1 !default;
$secondaryColor: #666 !default;
$highlightColor: #ccc !default;
$activeColor: #2098D1 !default;
$shadowColor: rgba(0, 0, 0, .6) !default;

// Speech bubbles options
$tipWidth: 10px !default;  //the width of the speech bubble tip
$tipHeight: 10px !default; //the height of the speech bubble tip
$tipColor: $primaryColor !default;

// Arrows options
$spaceBetweenTextAndArrows: 2.2em !default;

// Curl dimensions
$curlWidth: 25px !default;
$curlHeight: 25px !default;

// Curl colors
$revealAreaColor: white !default;    // reveal area behind the curl
$curlLineColor: #aaa !default;       // crease line
$curlTransitionColor: #ccc !default;	// color transitioning from crease line to final color
$curlLastColor: white !default;		// final color of the back of the curl

// Browser Prefixes - Which CSS prefixes should be used?
$webkit: true !default;
$moz: false !default;
$ms: false !default;
$o: false !default;

// Compile with or without classes
$includeClasses: true !default;


@import "background-transitions/fade";
@if $includeClasses {
	.#{$nameSpace}-fade {
		@include fade();
	}
}

@import "background-transitions/back-pulse";
@if $includeClasses {
	.#{$nameSpace}-back-pulse {
		@include back-pulse();
	}
}

@import "background-transitions/sweep-to-right";
@if $includeClasses {
	.#{$nameSpace}-sweep-to-right {
		@include sweep-to-right();
	}
}

@import "background-transitions/sweep-to-left";
@if $includeClasses {
	.#{$nameSpace}-sweep-to-left {
		@include sweep-to-left();
	}
}

@import "background-transitions/sweep-to-bottom";
@if $includeClasses {
	.#{$nameSpace}-sweep-to-bottom {
		@include sweep-to-bottom();
	}
}

@import "background-transitions/sweep-to-top";
@if $includeClasses {
	.#{$nameSpace}-sweep-to-top {
		@include sweep-to-top();
	}
}

@import "background-transitions/bounce-to-right";
@if $includeClasses {
	.#{$nameSpace}-bounce-to-right {
		@include bounce-to-right();
	}
}

@import "background-transitions/bounce-to-left";
@if $includeClasses {
	.#{$nameSpace}-bounce-to-left {
		@include bounce-to-left();
	}
}

@import "background-transitions/bounce-to-bottom";
@if $includeClasses {
	.#{$nameSpace}-bounce-to-bottom {
		@include bounce-to-bottom();
	}
}

@import "background-transitions/bounce-to-top";
@if $includeClasses {
	.#{$nameSpace}-bounce-to-top {
		@include bounce-to-top();
	}
}

@import "background-transitions/radial-out";
@if $includeClasses {
	.#{$nameSpace}-radial-out {
		@include radial-out();
	}
}

@import "background-transitions/radial-in";
@if $includeClasses {
	.#{$nameSpace}-radial-in {
		@include radial-in();
	}
}

@import "background-transitions/rectangle-in";
@if $includeClasses {
	.#{$nameSpace}-rectangle-in {
		@include rectangle-in();
	}
}

@import "background-transitions/rectangle-out";
@if $includeClasses {
	.#{$nameSpace}-rectangle-out {
		@include rectangle-out();
	}
}

@import "background-transitions/shutter-in-horizontal";
@if $includeClasses {
	.#{$nameSpace}-shutter-in-horizontal {
		@include shutter-in-horizontal();
	}
}

@import "background-transitions/shutter-out-horizontal";
@if $includeClasses {
	.#{$nameSpace}-shutter-out-horizontal {
		@include shutter-out-horizontal();
	}
}

@import "background-transitions/shutter-in-vertical";
@if $includeClasses {
	.#{$nameSpace}-shutter-in-vertical {
		@include shutter-in-vertical();
	}
}

@import "background-transitions/shutter-out-vertical";
@if $includeClasses {
	.#{$nameSpace}-shutter-out-vertical {
		@include shutter-out-vertical();
	}
}